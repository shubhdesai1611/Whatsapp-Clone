{"ast":null,"code":"var _jsxFileName = \"/Users/shubhdesai/Documents/VS Code/Wp/client/src/chat/chat/Messages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, styled } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { AccountContext } from \"../../context/AccountProvider\";\nimport { getMessages, newMessage } from \"../../service/api\";\nimport { Message } from \"./Message\";\n\n//Component\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Box)`\n  background-image: url(${\"https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png\"});\n`;\n_c = Wrapper;\nconst Component = styled(Box)`\n  height: 80vh;\n  overflow-y: scroll;\n`;\n_c2 = Component;\nconst Container = styled(Box)`\n  padding: 1px 80px;\n`;\n_c3 = Container;\nconst Messages = _ref => {\n  _s();\n  let {\n    person,\n    conversation\n  } = _ref;\n  const {\n    account\n  } = useContext(AccountContext);\n  const [value, setValue] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [newMessageFlag, setMessageFlag] = useState(false);\n  // to store files\n  const [file, setFile] = useState();\n  useEffect(() => {\n    const getMessageDetails = async () => {\n      let data = await getMessages(conversation._id);\n      setMessages(data);\n    };\n    conversation._id && getMessageDetails();\n  }, [person._id, conversation._id, newMessageFlag]);\n  const sendText = async e => {\n    const code = e.keyCode || e.which;\n    if (code == 13) {\n      let message = {\n        senderId: account.sub,\n        receiverId: person.sub,\n        conversationId: conversation._id,\n        type: \"text\",\n        text: value\n      };\n      await newMessage(message);\n      setValue(\"\");\n      setMessageFlag(prev => !prev);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Component, {\n      children: messages && messages.map(message => /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      sendText: sendText,\n      setValue: setValue,\n      value: value,\n      file: file,\n      setFile: setFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"I+bg08b4KhKH9z9l9XcDqkVkejc=\");\n_c4 = Messages;\nexport default Messages;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Component\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","Box","styled","useContext","AccountContext","getMessages","newMessage","Message","Footer","jsxDEV","_jsxDEV","Wrapper","_c","Component","_c2","Container","_c3","Messages","_ref","_s","person","conversation","account","value","setValue","messages","setMessages","newMessageFlag","setMessageFlag","file","setFile","getMessageDetails","data","_id","sendText","e","code","keyCode","which","message","senderId","sub","receiverId","conversationId","type","text","prev","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/Users/shubhdesai/Documents/VS Code/Wp/client/src/chat/chat/Messages.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, styled } from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { AccountContext } from \"../../context/AccountProvider\";\nimport { getMessages, newMessage } from \"../../service/api\";\nimport { Message } from \"./Message\";\n\n//Component\nimport Footer from \"./Footer\";\n\nconst Wrapper = styled(Box)`\n  background-image: url(${\"https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png\"});\n`;\n\nconst Component = styled(Box)`\n  height: 80vh;\n  overflow-y: scroll;\n`;\n\nconst Container = styled(Box)`\n  padding: 1px 80px;\n`;\n\nconst Messages = ({ person, conversation }) => {\n  const { account } = useContext(AccountContext);\n  const [value, setValue] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [newMessageFlag, setMessageFlag] = useState(false);\n  // to store files\n  const [file, setFile] = useState();\n\n  useEffect(() => {\n    const getMessageDetails = async () => {\n      let data = await getMessages(conversation._id);\n      setMessages(data);\n    };\n    conversation._id && getMessageDetails();\n  }, [person._id, conversation._id, newMessageFlag]);\n  const sendText = async (e) => {\n    const code = e.keyCode || e.which;\n    if (code == 13) {\n      let message = {\n        senderId: account.sub,\n        receiverId: person.sub,\n        conversationId: conversation._id,\n        type: \"text\",\n        text: value,\n      };\n      await newMessage(message);\n      setValue(\"\");\n      setMessageFlag((prev) => !prev);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Component>\n        {messages &&\n          messages.map((message) => (\n            <Container>\n              <Message message={message} />\n            </Container>\n          ))}\n      </Component>\n      <Footer\n        sendText={sendText}\n        setValue={setValue}\n        value={value}\n        file={file}\n        setFile={setFile}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Messages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}